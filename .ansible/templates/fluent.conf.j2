<source>
  @type tail
  @id in_tail_container_logs
  path /var/lib/docker/containers/*/*-json.log
  pos_file /fluentd/log/containers.log.pos
  time_format "%Y-%m-%dT%H:%M:%S.%L%Z"
  tag docker.*
  keep_time_key true
  read_from_head true
  format json
</source>

<filter docker.var.lib.docker.containers.*.*.log>
  @type docker_metadata
  labels com.docker.stack.namespace:stack.namespace,com.docker.swarm.service.name:swarm.service.name,com.docker.swarm.node.id:swarm.node.id
</filter>

<filter docker.var.lib.docker.containers.*.*.log>
  @type record_transformer
  enable_ruby true
  renew_record false
  <record>
    message ${record["log"]}
    container.id ${record["container_id"]}
    container.hostname ${record["container_hostname"]}
    container.name ${record["container_name"]}
    environment {{ env }}
    host.hostname {{ ansible_hostname }}
    host.name {{ inventory_hostname }}
    ecs.version 1.11.0
    event.dataset docker.${record["stream"]}
    event.module docker
    event.kind event
    event.category ["network", "web"]
    event.type ["info"]
  </record>
  remove_keys time, log, container_id, container_hostname, container_name
</filter>

<match docker.var.lib.docker.containers.*.*.log>
  @type rewrite_tag_filter
  <rule>
    key container.name
    pattern /^(.*)(elastic|kibana|fluent)(.*)$/
    tag ignore.${tag}
  </rule>
  <rule>
    key stack.namespace
    pattern /^(.+)$/
    tag raw.$1
  </rule>
  <rule>
    key container.name
    pattern /^(.+)$/
    tag raw.adhoc
  </rule>
</match>

<match ignore.**>
  @type null
</match>

# uncomment for debugging
# <match **>
#   @type stdout
# </match>

<match raw.**>
  @type detect_exceptions
  remove_tag_prefix raw
  message log
  languages python
</match>

<match **>
  @type relabel
  @label @LOGS_PARSED
</match>

<label @LOGS_PARSED>
  <match **>

    @type elasticsearch_data_stream
    @log_level info
    log_es_400_reason true

    data_stream_name docker-${tag}

    ca_file /etc/ssl/certs/ca-certificates.crt
    
    scheme {{ elastic_scheme }}
    host {{ elastic_host }}
    port {{ elastic_port }}

    user {{ elastic_username }}
    password {{ elastic_password }}

    reconnect_on_error true
    reload_on_failure true
    request_timeout 30s

    <buffer tag,container_id>
      @type file
      path /fluentd/log/dlog/elastic-buffer
      
      flush_mode interval
      flush_interval 3s

    </buffer>

  </match>
</label>

<label @FLUENT_LOG>
  <match **>
    @type null
  </match>
</label>
